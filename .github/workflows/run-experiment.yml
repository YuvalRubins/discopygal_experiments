name: Run Experiment

env:
  PYTHON_VERSION: 3.11.9
  MAX_JOBS: 256 # Max amount of jobs is 256

on:
    workflow_dispatch:  # Manual trigger only
        inputs:
            experiment_config:
                description: 'Configuration file of experiment to run'
                required: true
                default: 'exp_multi_alg/exp_config.json'
        #     commit_sha:
        #         description: 'Commit SHA to run the experiment'
        #         required: true
        #         default: 'main'

jobs:
    startup-config:
      runs-on: ubuntu-latest

      outputs:
          chunks: ${{ steps.get-config.outputs.chunks }}
          original_scenarios_file: ${{ steps.get-config.outputs.original_scenarios_file }}
          scenarios_file: ${{ steps.get-config.outputs.scenarios_file }}
          scenarios_file_dir: ${{ steps.get-config.outputs.scenarios_file_dir }}
          chunks_amount: ${{ steps.get-config.outputs.chunks_amount }}
          should_shuffle_scenarios: ${{ steps.get-config.outputs.should_shuffle_scenarios }}

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        - name: Cache Python packages
          uses: actions/cache@v4
          with:
              path: ~/.cache/pip
              key: ${{ runner.os }}-pip-${{ hashFiles('**/*.whl') }}

        - name: Install Discopygal
          run: pip install -v *.whl

        - name: Read JSON Config
          id: get-config
          run: |
               config_file=${{ github.event.inputs.experiment_config }}
               original_scenarios_file=$(jq -r '.scenarios_file' $config_file)
               scenarios_file=$(dirname $original_scenarios_file)/actual_$(basename $original_scenarios_file)
               chunks_amount=$(jq -r '.chunks_amount' $config_file)
               should_shuffle_scenarios=$(jq -r '.should_shuffle_scenarios' $config_file)

               if [[ "$chunks_amount" == '*' ]]; then
                   chunks_amount=$(python -c "from discopygal.experiments.run_experiment import load_scenarios_and_handlers; scenarios, _ = load_scenarios_and_handlers(\"$original_scenarios_file\"); print(len(scenarios))")
               fi

               if (( $chunks_amount > ${{ env.MAX_JOBS }} )); then
                  chunks_amount=${{ env.MAX_JOBS }}
               fi

               chunks=$(jq -r '.chunks' $config_file)
               if [[ "$chunks" == '*' ]]; then
                   chunks=$(python -c "print(list(range($chunks_amount)))")
               else
                   chunks=$(jq -c '.chunks' $config_file)
               fi

               {
                echo "chunks=$chunks";
                echo "original_scenarios_file=$original_scenarios_file";
                echo "scenarios_file=$scenarios_file";
                echo "chunks_amount=$chunks_amount";
                echo "should_shuffle_scenarios=$should_shuffle_scenarios";
                echo "scenarios_file_dir=$(dirname $scenarios_file)";
                } >> $GITHUB_OUTPUT

                echo "scenarios_file: $original_scenarios_file"
                echo "chunks: $chunks"
                echo "chunks_amount: $chunks_amount"
                echo "should_shuffle_scenarios: $should_shuffle_scenarios"

                cp $original_scenarios_file $scenarios_file

                if [[ $should_shuffle_scenarios == 1 ]]; then
                    echo -e "\n\nimport random\nrandom.seed(0)\nrandom.shuffle(SCENARIOS)" >> $scenarios_file
                fi

        - name: Upload scenarios file
          uses: actions/upload-artifact@v4
          with:
            name: scenarios_file
            path: ${{ steps.get-config.outputs.scenarios_file }}


    run-experiment-chunk:
        runs-on: ubuntu-latest
        needs: startup-config

        continue-on-error: true

        strategy:
            matrix:
              chunk: ${{ fromJson(needs.startup-config.outputs.chunks) }}

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: ${{ env.PYTHON_VERSION }}

            - name: Cache Python packages
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/*.whl') }}

            - name: Install Discopygal
              run: pip install -v *.whl

            - name: Download scenarios file
              uses: actions/download-artifact@v4
              with:
                  name: scenarios_file
                  path: ${{ needs.startup-config.outputs.scenarios_file_dir }}

            - name: Run Experiment Script
              run: scenarios_runner results ${{ needs.startup-config.outputs.scenarios_file }} ${{ needs.startup-config.outputs.chunks_amount }} ${{ matrix.chunk }}

            - name: Upload CSV Files as Artifact
              uses: actions/upload-artifact@v4
              with:
                name: chunk_${{ matrix.chunk }}
                path: ./results/chunk_${{ matrix.chunk }}

    sum_results:
        runs-on: ubuntu-latest
        needs: [startup-config, run-experiment-chunk]

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                python-version: ${{ env.PYTHON_VERSION }}

            - name: Cache Python packages
              uses: actions/cache@v4
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/*.whl') }}

            - name: Install Discopygal
              run: pip install -v *.whl

            - name: Download Results
              uses: actions/download-artifact@v4
              with:
                  pattern: chunk_*
                  path: ./results

            - name: Download scenarios file
              uses: actions/download-artifact@v4
              with:
                  name: scenarios_file
                  path: ${{ needs.startup-config.outputs.scenarios_file_dir }}

            - name: Process results
              run: scenarios_runner results ${{ needs.startup-config.outputs.scenarios_file }} ${{ needs.startup-config.outputs.chunks_amount }} end

            - name: De-shuffle results
              run: |
                   if [[ ${{ needs.startup-config.outputs.should_shuffle_scenarios }} == 1 ]]; then
                       python deshuffle_results.py ${{ needs.startup-config.outputs.original_scenarios_file }} results
                   fi

            - name: Re-upload Updated Results
              uses: actions/upload-artifact@v4
              with:
                  name: results
                  path: ./results/

            - name: Delete temporary chunk artifacts
              uses: geekyeggo/delete-artifact@v5
              with:
                  name: |
                        chunk_*
                        scenarios_file
