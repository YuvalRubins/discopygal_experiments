name: Version release

env:
  PYTHON_VERSION: 3.12.3
  GCC_MAJOR_VERSION: 12
  CONAN_REQUEST_TIMEOUT: 600
  QT_QPA_PLATFORM: offscreen
  CI: 1


on:
  workflow_dispatch:


jobs:
    build_package:
        runs-on: ubuntu-latest

        outputs:
            package_whl_file: ${{ steps.build_package.outputs.package_whl_file }}
            starter_package_whl_file: ${{ steps.build_starter_package.outputs.starter_package_whl_file }}

        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        - name: Clone discopygal
          run: git clone https://${{ secrets.MY_GITHUB_PAT }}@github.com/TAU-CGL/discopygal.git

        - name: Preparing requirements
          run: pip install build findpydeps

        - name: Build package
          id: build_package
          run: |
                python scripts/build_package.py
                echo "package_whl_file=$(basename `ls dist/*.whl`)" >> $GITHUB_OUTPUT
          working-directory: ./discopygal

        - name: Upload Discopygal package
          uses: actions/upload-artifact@v4
          with:
            name: package
            path: discopygal/dist/

        - name: Build starter package
          id: build_starter_package
          run: |
                rm -rf dist
                python scripts/build_starter_package.py
                echo "starter_package_whl_file=$(basename `ls dist/*.whl`)" >> $GITHUB_OUTPUT
          working-directory: ./discopygal

        - name: Upload Discopygal-Starter package
          uses: actions/upload-artifact@v4
          with:
            name: starter_package
            path: discopygal/dist/

    build_docs:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        - name: Install GCC ${{ env.GCC_MAJOR_VERSION }}
          run: sudo apt install gcc-${{ env.GCC_MAJOR_VERSION }} g++-${{ env.GCC_MAJOR_VERSION }}

        - name: Clone discopygal
          run: git clone https://${{ secrets.MY_GITHUB_PAT }}@github.com/TAU-CGL/discopygal.git

        - name: Preparing requirements
          run: |
                pip install pipenv
                CC=gcc-${{ env.GCC_MAJOR_VERSION }} CXX=g++-${{ env.GCC_MAJOR_VERSION }} pipenv install --python $(which python) --dev --verbose
                sudo apt install texlive-latex-extra dvipng
          working-directory: ./discopygal

        - name: Build docs
          run: |
                pipenv run make clean
                pipenv run make html
          working-directory: ./discopygal/docs

        - name: Upload docs
          uses: actions/upload-artifact@v4
          with:
            path: discopygal/docs/_build/html
            name: html_docs

    check_package:
        runs-on: ${{ matrix.os }}
        needs: build_package
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest, ubuntu-22.04, macos-14, macos-13, windows-2025]
                # os: [ubuntu-latest, windows-latest, macos-latest]
                # os: [macos-latest]
                # os: [ubuntu-latest]
                # os: [windows-latest]
                python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
                # python-version: ["3.10"]

        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
              python-version: ${{ matrix.python-version }}

        # - name: Setup for Linux
        #   if: runner.os == 'Linux'
        #   run:  |
        #          sudo apt install gcc-${{ env.GCC_MAJOR_VERSION }} g++-${{ env.GCC_MAJOR_VERSION }}
        #          echo "CC=gcc-${{ env.GCC_MAJOR_VERSION }}" >> $GITHUB_ENV
        #          echo "CXX=g++-${{ env.GCC_MAJOR_VERSION }}" >> $GITHUB_ENV

        - name: Setup for macOS
          if: runner.os == 'macOS'
          run:  |
                 pip install pyqt5
                 brew install boost

        - name: Download discopygal whl
          uses: actions/download-artifact@v4
          with:
            name: package

        - name: Install Discopygal
          run: pip install -v ${{ needs.build_package.outputs.package_whl_file }}

        - name: Clone discopygal
          run: git clone https://${{ secrets.MY_GITHUB_PAT }}@github.com/TAU-CGL/discopygal.git

        - name: Install test dependencies
          run: pip install pytest

        - name: Run tests
          run: pytest -v ./tests -m sanity
          working-directory: ./discopygal

        - name: Run GUI tests (Linux)
          if: runner.os == 'Linux'
          run: |
                sudo apt-get install -y xvfb
                export DISPLAY=:99
                xvfb-run -a pytest -vs ./tests -m gui
          working-directory: ./discopygal

        - name: Run GUI tests
          if: runner.os != 'Linux'
          run: pytest -vs ./tests -m gui
          working-directory: ./discopygal

    check_starter_package:
        runs-on: ${{ matrix.os }}
        needs: build_package
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest, ubuntu-22.04, macos-14, macos-13, windows-2025]
                python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v5
          with:
              python-version: ${{ matrix.python-version }}

        - name: Setup for Linux
          if: runner.os == 'Linux'
          run:  |
                 sudo apt install gcc-${{ env.GCC_MAJOR_VERSION }} g++-${{ env.GCC_MAJOR_VERSION }}
                 echo "CC=gcc-${{ env.GCC_MAJOR_VERSION }}" >> $GITHUB_ENV
                 echo "CXX=g++-${{ env.GCC_MAJOR_VERSION }}" >> $GITHUB_ENV

        - name: Setup for macOS
          if: runner.os == 'macOS'
          run:  |
                 pip install pyqt5
                 brew install boost

        - name: Download discopygal whl
          uses: actions/download-artifact@v4
          with:
            name: starter_package

        - name: Install Discopygal
          run: pip install -v ${{ needs.build_package.outputs.starter_package_whl_file }}

        - name: Clone discopygal
          run: git clone https://${{ secrets.MY_GITHUB_PAT }}@github.com/TAU-CGL/discopygal.git

        - name: Install test dependencies
          run: pip install pytest

        - name: Run tests
          run: pytest -vs ./tests/solvers/test_solvers.py ./tests/solvers/test_starter.py -m starter
          working-directory: ./discopygal

        - name: Run GUI tests (Linux)
          if: runner.os == 'Linux'
          run: |
                sudo apt-get install -y xvfb
                export DISPLAY=:99
                xvfb-run -a pytest -vs ./tests/solvers/test_solver_viewer.py -m starter
          working-directory: ./discopygal

        - name: Run GUI tests
          if: runner.os != 'Linux'
          run: pytest -vs ./tests/solvers/test_solver_viewer.py -m starter
          working-directory: ./discopygal
